<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.engineer.user.mapper.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.engineer.user.pojo.Resource">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="src_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="permission_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="src_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sequence" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="productid" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
    <select id="getResourceList" resultType="com.engineer.user.vo.ResourceVo">
        SELECT r.src_id, r.permission_id, r.src_name, r.url, r.description, r.sequence, p.creater_id, p.create_time, p.enabled, p.productid
        FROM permission p
        INNER JOIN resource r ON p.permission_id = r.permission_id
        ORDER BY sequence DESC
    </select>
    <select id="getAuthorizedResourceListByRoleId" resultType="com.engineer.user.vo.ResourceVo">
        SELECT r.src_id, r.permission_id, r.src_name, r.url, r.description, rp.creater_id, rp.create_time, p.enabled
        FROM resource r
        LEFT JOIN permission p ON r.permission_id = p.permission_id
        LEFT JOIN role_permission rp ON rp.permission_id = p.permission_id
        WHERE rp.role_id = #{roleId}
        ORDER BY r.sequence DESC
    </select>
    <select id="getUnAuthorizedResourceListByRoleId" resultType="com.engineer.user.vo.ResourceVo">
        SELECT r.src_id, r.permission_id, r.src_name, r.url, r.description, p.enabled
        FROM resource r
        LEFT JOIN permission p ON p.permission_id = r.permission_id
        WHERE NOT EXISTS (
        SELECT 1 FROM role_permission rp
        WHERE rp.permission_id = p.permission_id AND rp.role_id = #{roleId}
        ) ORDER BY r.sequence DESC
    </select>
    <select id="selectResourcesByRoleList" resultType="java.lang.String">
        SELECT DISTINCT r.url
        FROM resource r
        LEFT JOIN permission p ON r.permission_id = p.permission_id
        LEFT JOIN role_permission rp ON rp.permission_id = p.permission_id
        WHERE p.enabled = 1 AND rp.role_id IN
        <foreach collection="roles" item="role" open="(" close=")" separator=",">
            #{role.roleId}
        </foreach>
    </select>
</mapper>